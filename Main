import PySimpleGUI as sg
import requests
import os
from bs4 import BeautifulSoup


class PDFScraper:
    def __init__(self):
        # Create the layout of the user interface
        layout = [
            [sg.Text("Enter the URL of the site to search for PDFs:")],
            [sg.Input(key="url")],
            [sg.Text("Enter the number of pages to search:")],
            [sg.Input(key="num_pages")
             ],
            [sg.Button("Search and Download PDFs", key="search"),
             sg.Button("Cancel")],
            [sg.ProgressBar(100, orientation="h",
                            size=(20, 20), key="progress")]
        ]

        # Create the window with the layout
        self.window = sg.Window("PDF Scraper", layout)

    def start(self):
        while True:
            # Get the user input and the button that was clicked
            event, values = self.window.read()

            # If the user clicks the "Search and Download PDFs" button
            if event == "search":
                # Get the URL and number of pages entered by the user
                url = values["url"]
                num_pages = int(values["num_pages"])

                # Create a list to store the PDF links found on each page
                pdf_links = []

                for page in range(1, num_pages + 1):
                    # Construct the URL for the current page
                    page_url = url + "?page=" + str(page)

                    # Send a GET request to the URL
                    try:
                        response = requests.get(page_url)
                    except requests.exceptions.RequestException as e:
                        sg.popup_error("Invalid URL: " + str(e))
                        return

                    # Parse the HTML content of the page
                    html_soup = BeautifulSoup(response.content, "html.parser")

                    # Find all PDF links on the page
                    page_pdf_links = [a["href"]
                                      for a in html_soup.find_all("a", href=True)
                                      if a["href"].endswith(".pdf")]

                    # Add the PDF links from the current page to the list
                    pdf_links += page_pdf_links

                # Prompt the user to select a directory to save the PDFs to
                directory = sg.popup_get_folder(
                    "Select directory to save PDFs")

                if not directory:
                    return

                # Download each PDF and save it to the selected directory
                for link in pdf_links:
                    self.download_pdf(link, directory)

            # If the user clicks the "Cancel" button or closes the window
            elif event in (None, "cancel"):
                # Close the window and exit the application
                self.window.close()
                return
# Create an instance of the PDFScraper class
        pdf_
